DROP TABLE IF EXISTS genre_line;
DROP TABLE IF EXISTS likes;
DROP TABLE IF EXISTS user_friends;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS films;
DROP TABLE IF EXISTS genres;
DROP TABLE IF EXISTS ratings;

CREATE TABLE IF NOT EXISTS genres (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(30) UNIQUE
);

CREATE TABLE IF NOT EXISTS ratings (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(30) UNIQUE
);

CREATE TABLE IF NOT EXISTS films (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100)   NOT NULL,
    description VARCHAR(200)   NOT NULL,
    release_date DATE,
    duration INTEGER,
    rating_id INTEGER REFERENCES ratings (id),
    CONSTRAINT valid CHECK (duration > 0 AND name <> '')
);

CREATE TABLE IF NOT EXISTS genre_line (
    film_id INTEGER REFERENCES films (id),
    genre_id INTEGER REFERENCES genres (id)
);

CREATE TABLE IF NOT EXISTS users (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(30) UNIQUE NOT NULL,
    login VARCHAR(20)   NOT NULL,
    name VARCHAR(20),
    birthday DATE
);

CREATE TABLE IF NOT EXISTS likes (
    film_id INTEGER REFERENCES films (id),
    user_id INTEGER REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS user_friends (
    user_id INTEGER REFERENCES users (id),
    friend_id INTEGER REFERENCES users (id),
    status VARCHAR(10)   NOT NULL
);


